import { task } from "hardhat/config";
import { HardhatRuntimeEnvironment } from "hardhat/types";
import { parseEther } from "@ethersproject/units";
import { getAddress } from "@zetachain/addresses";

const main = async (args: any, hre: HardhatRuntimeEnvironment) => {
  const [signer] = await hre.ethers.getSigners();
  console.log(`🔑 Using account: ${signer.address}\n`);

  const prepareData = (
    contract: string,
    typesList: string[],
    argsList: string[]
  ) => {
    const abiCoder = hre.ethers.utils.defaultAbiCoder;
    const params = abiCoder.encode(typesList, argsList);
    return `${contract}${params.slice(2)}`;
  };

  const network = hre.network.name;
  const data = prepareData(
    args.contract,
    [{{#each arguments.types}}"{{this}}", {{/each}}],
    [{{#each arguments.names}}"{{this}}", {{/each}}]
  );
  const to = getAddress({
    address: "tss",
    networkName: network,
    zetaNetwork: "athens",
  });
  const value = parseEther(args.amount);

  const tx = await signer.sendTransaction({ data, to, value });

  console.log(`
🚀 Successfully broadcasted a token transfer transaction on ${network} network.
📝 Transaction hash: ${tx.hash}

This transaction has been submitted to ${network}, but it may take some time
for it to be processed on ZetaChain. Please refer to ZetaChain's explorer
for updates on the progress of the cross-chain transaction.

🌍 Explorer: https://explorer.zetachain.com/address/${args.contract}?tab=ccTxs
`);
};

task("interact", "Interact with the contract")
  .addParam("contract", "The address of the withdraw contract on ZetaChain")
  .addParam("amount", "Amount of tokens to send")
  .setAction(main);
