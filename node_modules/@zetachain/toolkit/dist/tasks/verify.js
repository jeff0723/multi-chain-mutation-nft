"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyTask = void 0;
const select_1 = __importDefault(require("@inquirer/select"));
const axios_1 = __importDefault(require("axios"));
const form_data_1 = __importDefault(require("form-data"));
const config_1 = require("hardhat/config");
const contract_names_1 = require("hardhat/utils/contract-names");
const verifyURL = "https://server.sourcify.athens2.zetachain.com/verify";
const queryURL = "https://repo.sourcify.athens2.zetachain.com/contracts/full_match/7001";
const main = async (args, hre) => {
    try {
        const response = await axios_1.default.get(`${queryURL}/${args.contract}`);
        if (response.status === 200) {
            console.log(`✅ Contract has already been verified.`);
            return;
        }
    }
    catch (error) { }
    const names = await hre.artifacts.getAllFullyQualifiedNames();
    if (names.length === 0) {
        console.error("❌ Error: no contracts found. Please make sure there are compiled contracts.");
        return;
    }
    const chosen = parseInt(await (0, select_1.default)({
        choices: names.map((name, i) => ({ name, value: i.toString() })),
        message: "Select a contract to verify:",
    }));
    const [path, name] = names[chosen].split(":");
    const metadata = await hre.artifacts.getBuildInfo((0, contract_names_1.getFullyQualifiedName)(path, name));
    const source = metadata?.input.sources[path]?.content;
    if (!source) {
        console.error(`❌ Source code not found for contract: ${name}`);
        return;
    }
    const formData = new form_data_1.default();
    formData.append("address", args.contract);
    formData.append("chain", "7001");
    formData.append("chosenContract", chosen.toString());
    formData.append("files", Buffer.from(source), {
        contentType: "text/plain",
        filename: `${name}.sol`,
    });
    formData.append("files", Buffer.from(JSON.stringify(metadata)), {
        contentType: "application/json",
        filename: "metadata.json",
    });
    const headers = { headers: formData.getHeaders() };
    try {
        await axios_1.default.post(verifyURL, formData, headers);
        console.log(`✅ Contract verified: https://explorer.zetachain.com/address/${args.contract}`);
    }
    catch (error) {
        console.error(`❌ Error during contract verification: ${error.response.data.error}`);
    }
};
exports.verifyTask = (0, config_1.task)("verify:zeta", "Verify a contract on ZetaChain.", main).addParam("contract", "Contract address to verify");
