import { Separator } from '@inquirer/core';
export type Choice<Value> = {
    name?: string;
    value: Value;
    disabled?: boolean | string;
    checked?: boolean;
    type?: never;
};
type Config<Value> = {
    prefix?: string;
    pageSize?: number;
    instructions?: string | boolean;
    message: string;
    choices: ReadonlyArray<Choice<Value> | Separator>;
};
declare const _default: <Value extends unknown>(config: Config<Value>, context?: import("@inquirer/type").Context | undefined) => import("@inquirer/type").CancelablePromise<Value[]>;
export default _default;
export { Separator };
